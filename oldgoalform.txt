// GoalForm.js
import React, { useState, useEffect } from 'react';
import { View, TextInput, Button, Text, StyleSheet } from 'react-native';
import { db } from '../../firebaseConfig';   // Adjust import path as per your directory structure
import { collection, addDoc, doc, getDoc } from "firebase/firestore";
import { getAuth, onAuthStateChanged } from "firebase/auth";

function GoalForm() {
  const [goalType, setGoalType] = useState('');
  const [targetValue, setTargetValue] = useState('');
  const [userDocId, setUserDocId] = useState(null);

  useEffect(() => {
    const auth = getAuth();
    const unsubscribe = onAuthStateChanged(auth, async (user) => {
      if (user) {
        try {
          const userDocRef = doc(db, "users", user.uid);
          const userDocSnap = await getDoc(userDocRef);
          if (userDocSnap.exists()) {
            setUserDocId(userDocSnap.id);
          } else {
            console.error("User document does not exist.");
          }
        } catch (error) {
          console.error("Error fetching user document:", error);
        }
      } else {
        setUserDocId(null);
      }
    });

    // Cleanup subscription on unmount
    return () => unsubscribe();
  }, []);

  const handleAddGoal = async () => {
    if (!goalType || !targetValue || !userDocId) {
      alert("All fields are required!");
      return;
    }

    const goalData = {
      goalType,
      targetValue: parseInt(targetValue),
      startDate: new Date(),
      endDate: new Date(new Date().setMonth(new Date().getMonth() + 1)),
    };

    try {
      // Add the goal data to the "Goals" subcollection of the user document
      const userDocRef = doc(db, "users", userDocId);
      const goalsCollectionRef = collection(userDocRef, "Goals");
      const docRef = await addDoc(goalsCollectionRef, goalData);

      alert('Goal added successfully!');
      console.log("Document written with ID: ", docRef.id);
    } catch (e) {
      console.error("Error adding goal: ", e);
    }
  };

  return (
    <View style={styles.formContainer}>
      <Text>Goal Type:</Text>
      <TextInput
        style={styles.input}
        placeholder="e.g., Weight Loss"
        onChangeText={setGoalType}
        value={goalType}
      />
      <Text>Target Value:</Text>
      <TextInput
        style={styles.input}
        keyboardType="numeric"
        placeholder="e.g., 5 kg"
        onChangeText={setTargetValue}
        value={targetValue}
      />
      <Button title="Add Goal" onPress={handleAddGoal} />
    </View>
  );
}

const styles = StyleSheet.create({
  formContainer: {
    padding: 10,
  },
  input: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginVertical: 10,
    paddingHorizontal: 5,
  },
});

export default GoalForm;